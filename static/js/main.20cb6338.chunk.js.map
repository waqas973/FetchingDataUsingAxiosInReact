{"version":3,"sources":["Components/CharacterData.js","Components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterData","query","useState","item","setImg","useEffect","a","axios","get","res","data","getData","ImagesGallery","map","img","name","ContentDiv","src","alt","Info","styled","div","Search","getQuery","Input","setInput","SearchBox","type","value","onChange","e","target","placeholder","App","Query","setQuery","Main","q","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAmCeA,I,EAAAA,EA9Bf,YAAiC,IAATC,EAAQ,EAARA,MACpB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAVAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACIC,IAAMC,IAAN,6DAAgEP,IADpE,OACTQ,EADS,OAEZL,EAAOK,EAAIC,MAFC,2CAAH,qDAMbC,KACD,CAACV,IAGE,cAACW,EAAD,UAEMT,EAAKU,KAAI,YAAe,IAAbC,EAAY,EAAZA,IAAIC,EAAQ,EAARA,KACZ,OAAQ,eAACC,EAAD,WACI,qBAAKC,IAAKH,EAAKI,IAAI,KAClB,cAACC,EAAD,UACMJ,aAY9BH,EAAgBQ,IAAOC,IAAV,oRAWdL,EAAYI,IAAOC,IAAT,mWAoBVF,EAAMC,IAAOC,IAAT,wICpDKC,I,EAAAA,EAbf,YAA6B,IAAZC,EAAW,EAAXA,SACf,EAA4BrB,mBAAS,IAArC,mBAAOsB,EAAP,KAAeC,EAAf,KAKE,OACI,cAACC,EAAD,UACK,uBAAQC,KAAK,OAAOC,MAAOJ,EAAOK,SANxB,SAACC,GAChBL,EAASK,EAAEC,OAAOH,OAClBL,EAASO,EAAEC,OAAOH,QAIgDI,YAAY,wBAOhFN,EAAYN,IAAOC,IAAV,sUCEAY,MAff,WACE,MAA2B/B,mBAAS,IAApC,mBAAOgC,EAAP,KAAeC,EAAf,KAIA,OACG,eAACC,EAAD,WACI,oEACD,cAAC,EAAD,CAAQb,SANG,SAACc,GACZF,EAASE,MAMV,cAAC,EAAD,CAAgBpC,MAAOiC,QAQxBE,EAAOhB,IAAOC,IAAV,+ICVKiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.20cb6338.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction CharacterData({query}) {\r\n    const [item , setImg] = useState([]);\r\n\r\n    useEffect(()=>{\r\n       const getData = async function(){\r\n        const res = await  axios.get(`https://www.breakingbadapi.com/api/characters?name=${query}`);\r\n           setImg(res.data);\r\n           \r\n       }\r\n       \r\n       getData();  \r\n    },[query]);\r\n  \r\n    return (\r\n         <ImagesGallery >\r\n            {\r\n               item.map(({img,name})=>{ \r\n                  return  <ContentDiv>\r\n                              <img src={img} alt='' />\r\n                               <Info>\r\n                                    {name}\r\n                               </Info>\r\n                           </ContentDiv>  \r\n                })   \r\n            }\r\n         </ImagesGallery>\r\n     \r\n    )\r\n}\r\n\r\nexport default CharacterData;\r\n\r\n const ImagesGallery = styled.div`\r\nwidth: 90vw;\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-wrap: wrap;\r\nborder: 1px solid whitesmoke;\r\nbackground-color: whitesmoke;\r\nbox-shadow: 2px -1px 10px rgba(0,0,0,0.15),-2px 1px 10px rgba(0,0,0,0.15);\r\noverflow-y: scroll;\r\nheight:80vh;\r\n `;\r\nconst ContentDiv =styled.div`\r\nheight: 300px;\r\n width: 20%;\r\n border: 3px solid white;\r\n margin: 10px;\r\n box-shadow: 2px -1px 10px rgba(0,0,0,0.1),-2px 1px 10px rgba(0,0,0,0.1);\r\n> img {\r\n    flex:1;\r\n   width: 100%;\r\n   height: 250px;\r\n   \r\n }\r\n @media (max-width: 992px) {\r\n    width: 33.33%;\r\n  }\r\n  @media (max-width: 580px) {\r\n    width: 100%;\r\n  }\r\n \r\n`;\r\nconst Info =styled.div`\r\n text-align: center;\r\n font-weight: bold;\r\n padding-top: 5px;\r\n padding-left: 10px;\r\n padding-right: 10px;\r\n`;","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction Search({getQuery}) {\r\n  const [Input , setInput ] = useState('');\r\n  const handleChange = (e)=>{\r\n        setInput(e.target.value);\r\n        getQuery(e.target.value);       \r\n  }\r\n    return (\r\n        <SearchBox>\r\n             <input  type='text' value={Input} onChange = {handleChange } placeholder='Search character' />\r\n        </SearchBox>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\nconst SearchBox = styled.div`\r\n  width: 50vw;\r\n  margin-bottom: 20px;\r\n  > input{\r\n      width: 100%;\r\n      padding: 10px;\r\n      border: none;\r\n      outline: none;\r\n      background-color: whitesmoke;\r\n      border: 2px solid whitesmoke;\r\n      box-shadow: 2px -1px 10px rgba(0,0,0,0.15),-2px 1px 10px rgba(0,0,0,0.15);\r\n  }\r\n`;\r\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport CharacterData from './Components/CharacterData';\nimport Search from './Components/Search';\n\nfunction App() {\n  const [Query , setQuery] = useState('');\n  const getquery = (q)=>{\n        setQuery(q);\n  }\n  return (\n     <Main >\n         <h1>Fetching Data using Axios in React</h1>\n        <Search getQuery = {getquery}/>\n       <CharacterData  query={Query} />\n    </Main>\n    \n  );\n}\n\nexport default App;\n\nconst Main = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  flex-direction: column;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}